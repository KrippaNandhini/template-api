---
name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Debug environment before installation
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          python --version
          pip --version

      # Install core dependencies first
      - name: Install core dependencies
        run: |
          pip install fastapi pydantic pydantic-settings prometheus-fastapi-instrumentator requests uvicorn httpx prometheus-client

      # Then try project-specific installations
      - name: Install project dependencies
        shell: bash
        run: |
          set -euxo pipefail
          
          # Try pyproject.toml installation if it exists
          if [ -f pyproject.toml ] && grep -q "^\[project\]" pyproject.toml; then
            echo "Installing from pyproject.toml..."
            pip install -e ".[test]" || echo "pyproject.toml installation failed, continuing..."
          fi
          
          # Try requirements.txt if it exists
          if [ -f requirements.txt ]; then
            echo "Installing from requirements.txt..."
            pip install -r requirements.txt || echo "requirements.txt installation failed, continuing..."
          fi

      - name: Verify critical imports
        run: |
          python -c "
          import sys
          sys.path.insert(0, '.')
          
          try:
              import pydantic
              print(f'pydantic version: {pydantic.__version__}')
          except ImportError as e:
              print(f'pydantic import failed: {e}')
              
          try:
              from app.settings import Settings
              print('app.settings import: OK')
          except ImportError as e:
              print(f'app.settings import failed: {e}')
              
          print('Python path:', sys.path[:3])
          "

      - name: Install tooling
        run: pip install pre-commit pytest pytest-cov

      - name: Show installed packages
        run: pip list | grep -E "(pydantic|fastapi)"

      - name: Run pre-commit (ruff, black, mypy)
        run: pre-commit run --all-files

      - name: Run tests
        env:
          PYTHONPATH: .
        run: pytest -v --maxfail=1 --disable-warnings